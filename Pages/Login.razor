@page "/"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text
@using Newtonsoft.Json;
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<main class="loginRegister">
	<section class="loginRegister__formSection">
		<img class="loginRegister__logo" src="/img/logo.png" alt="Logo" />
		<form class="loginRegister__form" action="">
			<h1 class="loginRegister__title">Iniciar Sesión</h1>
			<input placeholder="Correo" class="loginRegister__input" type="email" value="@mail"
				@oninput="OnEmailChanged" />
			<input placeholder="Contraseña" class="loginRegister__input" type="password" value="@password"
				@oninput="OnPasswordChanged" />
			<button class="loginRegister__button" type="button" @onclick="@sendData">Iniciar Sesión</button>
			<p class="loginRegister__question">
				¿Aún no tienes cuenta?
				<a class="loginRegister__question__a" href="/register">
					Regístrate
				</a>
			</p>
		</form>
	</section>
	<section class="loginRegister__imageSection">
		<h2 class="loginRegister__imageSection__title">
			Sistema de <br />
			monitorias
		</h2>
		<img class="loginRegister__imageSection__img" src="/img/login-register/students.png" alt="Estudiantes" />
	</section>
</main>

@code {
	private string mail;
	private string password;
	private string error;

	public class responseData
	{
		public string token { get; set; }
		public string error { get; set; }
	}

	private void OnPasswordChanged(ChangeEventArgs e)
	{
		password = e.Value.ToString();
	}
	private void OnEmailChanged(ChangeEventArgs e)
	{
		mail = e.Value.ToString();
	}

	private async void sendData()
	{
		var postBody = new { mail = mail, password = password, name = "cata", code = "111", career = "cata" };
		Console.WriteLine(postBody);
		//var response = await Http.PostAsJsonAsync("http://localhost:8080/api/usuarios/login", postBody);
		var response = await Http.PostAsync("http://localhost:8080/api/usuarios/login", new
			StringContent(JsonConvert.SerializeObject(postBody), Encoding.UTF8, "application/json"));
		Console.WriteLine(response);
		var responseString = await response.Content.ReadFromJsonAsync<responseData>();
		Console.WriteLine(responseString.token);
		if (responseString.error == "")
		{
			await localStorage.SetItemAsync("token", responseString.token);

			NavigationManager.NavigateTo("/monitorias");
		}
		else
		{
			error = responseString.error;
		}
	}
}

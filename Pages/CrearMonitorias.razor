@page "/nueva-monitoria" 
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

@if(loadingToken){
		<div class="mainLayout">
		<Nav />
			<div class="mainLayout__container">
				<header class="mainLayout__container__header">
					<div class="mainLayout__container__header__gradient">
						<h1 class="color-white">Sistema de monitorias</h1>
						<span class="color-white">Universidad Santiago de Cali</span>
					</div>
				</header>
				<main>
				</main>
			</div>
		</div>
	}else{

<div class="mainLayout">
			<NavMenu/>
			<div class="mainLayout__container">
				<header class="mainLayout__container__header">
					<div class="mainLayout__container__header__gradient">
						<h1 class="color-white">Sistema de monitorias</h1>
						<span class="color-white">Universidad Santiago de Cali</span>
					</div>
				</header>
				<main>
					@if (success)
					{
							<div class="success">
								<img class="success__img" src="/img/icons/check.svg" alt=":D">
								<h2>La monitoria se creo<br>satisfactoriamente</h2>
								<a class="ghotsBtn" href="/monitorias">Ir al inicio</a>
							</div>
					}else{
						@if (error)
						{
								<div class="success">
								<img class="success__img" src="/img/icons/delete.svg" alt=":D">
								<h2>Ocurrió un error al<br>crear la monitoria</h2>
								<a class="ghotsBtn" href="/monitorias">Ir al inicio</a>
							</div>
						}else {

          <form class="form-monitoria" @onsubmit="sendData" @onsubmit:preventDefault>
						<h2 class="form-monitoria__title">Crear monotoria</h2>
						<input class="form-monitoria__input long" required placeholder="Nombre" type="text" @bind="name" />
						<select class="form-monitoria__input long" required @bind="faculty">
							<option value="" disabled hidden ></option>
							<option value="Facultad de Ciencias Básicas">
								Facultad de Ciencias Básicas
							</option>
							<option value="Facultad de Ciencias Económicas y Empresariales">
								Facultad de Ciencias Económicas y Empresariales
							</option>
							<option value="Facultad de Comunicación y Publicidad">
								Facultad de Comunicación y Publicidad
							</option>
							<option value="Facultad de Derecho">Facultad de Derecho</option>
							<option value="Facultad de Educación">
								Facultad de Educación
							</option>
							<option value="Facultad de Ingeniería">
								Facultad de Ingeniería
							</option>
							<option value="Facultad de Salud">Facultad de Salud</option>
						</select>
						<select class="form-monitoria__input" required @bind="day">
							<option value="" disabled hidden></option>
							<option value="Lunes">Lunes</option>
							<option value="Martes">Martes</option>
							<option value="Miércoles">Miércoles</option>
							<option value="Jueves">Jueves</option>
							<option value="Viernes">Viernes</option>
							<option value="Sábado">Sábado</option>
							<option value="Domingo">Domingo</option>
						</select>
						<label for="init">
							<span class="form-monitoria__input__span">
							Hora de inicio:
							</span>
							<input class="form-monitoria__input" id="init" type="time" min="07:00" max="18:00" required @bind="init" />
						</label>
						<label for="end">
							<span class="form-monitoria__input__span">
							Hora de Fin:
							</span>
							<input class="form-monitoria__input" id="end" type="time" min="07:00" max="18:00" required @bind="end"/>
						</label>
						<input class="form-monitoria__input half" placeholder="Sala" required type="text" @bind="livingRoom"/>
						<input class="form-monitoria__input half" placeholder="Total de cupos" min="0" required type="number" @bind="initialQuotas"/>
						<textarea class="form-monitoria__input text-area long" placeholder="Descripción" cols="30" rows="5" @bind="description"></textarea>
						<button class="form-monitoria__button" type="submit">Enviar</button>
					</form>
						}
					}
        </main>
			</div>
		</div>
	}
@code {
  private string name;
  private string faculty;
  private string day;
  private DateTime init;
  private DateTime end;
  private string livingRoom;
  private string initialQuotas;
  private string description;
	bool loadingToken = true;
	Usuario usuario { get; set; }

string[] students =  new List<string>().ToArray();
	public bool success = false;
	public bool error = false;
	public bool loading = true;

	private static readonly System.Text.Json.JsonSerializerOptions s_options = 
    new System.Text.Json.JsonSerializerOptions() 
  {
    PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase,
    PropertyNameCaseInsensitive = true,
  };

	protected async override Task OnAfterRenderAsync(bool firstRender)    
	{
		if (firstRender)
    {
  			var aux = await localStorage.GetItemAsync<string>("token");
				if(aux == null){
					loadingToken = false;
					NavigationManager.NavigateTo("/login");
				}else{
					loadingToken = false;
					var httpResponseUser = await Http.GetFromJsonAsync<Usuario>("http://localhost:8080/api/usuarios/" + aux, s_options );
					usuario = httpResponseUser; 
					if (usuario.roll != 1)
					{
							NavigationManager.NavigateTo("/monitorias");
					}
        	loading = false;
				}
    }
		StateHasChanged();
	}

  private async Task sendData()
    {
			try
			{	

        var postBody = new { name = name, faculty = faculty, day= day, init= init.ToString(), end= end.ToString(), livingRoom= livingRoom, initialQuotas= initialQuotas, description= description, students=students, monitor=""};
        var response = await Http.PostAsJsonAsync("http://localhost:8080/api/monitorias", postBody);
				success = true;
			}
			catch (System.Exception)
			{
					error = true;
			}
	
    }
}
@page "/monitorias/{id}"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http


<div class="mainLayout">
			<NavMenu/>
			<div class="mainLayout__container">
				<header class="mainLayout__container__header">
					<div class="mainLayout__container__header__gradient">
						<h1 class="color-white">Sistema de monitorias</h1>
						<span class="color-white">Universidad Santiago de Cali</span>
					</div>
				</header>
				<main>
          @if (loading == false){
          
          @if (success)
					{
							<div class="success">
								<img class="success__img" src="/img/icons/check.svg" alt=":D">
								<h2>La monitoria se modificó<br>satisfactoriamente</h2>
								<a class="ghotsBtn" href="/monitorias">Ir al inicio</a>
							</div>
					}else{
						@if (error)
						{
								<div class="success">
								<img class="success__img" src="/img/icons/delete.svg" alt=":D">
								<h2>Ocurrió un error al<br>editar la monitoria</h2>
								<a class="ghotsBtn" href="/monitorias">Ir al inicio</a>
							</div>
						}else {

          <form class="form-monitoria" @onsubmit="edit" @onsubmit:preventDefault>
						<h2 class="form-monitoria__title">Editar monotoria</h2>
						<input class="form-monitoria__input long" required placeholder="Nombre" type="text" @bind="monitoria.Name" />
						<select class="form-monitoria__input long" required @bind="monitoria.faculty">
							<option value="" disabled hidden ></option>
							<option value="Facultad de Ciencias Básicas">
								Facultad de Ciencias Básicas
							</option>
							<option value="Facultad de Ciencias Económicas y Empresariales">
								Facultad de Ciencias Económicas y Empresariales
							</option>
							<option value="Facultad de Comunicación  y Publicidad">
								Facultad de Comunicación y Publicidad
							</option>
							<option value="Facultad de Derecho">Facultad de Derecho</option>
							<option value="Facultad de Educación">
								Facultad de Educación
							</option>
							<option value="Facultad de Ingeniería">
								Facultad de Ingeniería
							</option>
							<option value="Facultad de Salud">Facultad de Salud</option>
						</select>
						<select class="form-monitoria__input" required @bind="monitoria.day">
							<option value="" disabled hidden></option>
							<option value="Lunes">Lunes</option>
							<option value="Martes">Martes</option>
							<option value="Miércoles">Miércoles</option>
							<option value="Jueves">Jueves</option>
							<option value="Viernes">Viernes</option>
							<option value="Sábado">Sábado</option>
							<option value="Domingo">Domingo</option>
						</select>
						<label for="init">
							<span class="form-monitoria__input__span">
							Hora de inicio:
							</span>
							<input class="form-monitoria__input" id="init" type="time" min="07:00" max="18:00" @bind="init" required  />
						</label>
						<label for="end">
							<span class="form-monitoria__input__span">
							Hora de Fin:
							</span>
							<input class="form-monitoria__input" id="end" type="time" min="07:00" max="18:00" @bind="end" required />
						</label>
						<input class="form-monitoria__input half" placeholder="Sala" required type="text" @bind="monitoria.livingRoom"/>
						<input class="form-monitoria__input half" placeholder="Total de cupos" min="0" required type="number" @bind="monitoria.initialQuotas"/>
						<textarea class="form-monitoria__input text-area long" placeholder="Descripción" cols="30" rows="5" @bind="monitoria.description"></textarea>
						<button class="form-monitoria__button" type="submit">Enviar</button>
					</form>
						}
					}
          }
        </main>
			</div>
		</div>

@code {
  [Parameter]
  public string Id { get; set; }

  public bool loading = true;
  
  Monitoria monitoria { get; set; }
	private DateTime init;
  private DateTime end;
	public bool success = false;
	public bool error = false;

  private static readonly System.Text.Json.JsonSerializerOptions s_options = 
    new System.Text.Json.JsonSerializerOptions() 
  {
    PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase,
    PropertyNameCaseInsensitive = true,
  };

	private async Task edit()
    {
			try
			{	
				monitoria.init = init.ToString();
				monitoria.end = end.ToString();
        var response = await Http.PutAsJsonAsync<Monitoria>("http://localhost:8080/api/monitorias/"+Id, monitoria);
				success = true;
			}
			catch (System.Exception)
			{
					error = true;
			}
	
    }
  
  protected override async Task OnInitializedAsync()
    {
        var httpResponse = await Http.GetFromJsonAsync<Monitoria>("http://localhost:8080/api/monitorias/"+Id, s_options);
        monitoria = httpResponse;
				init = DateTime.Parse(httpResponse.init);
				end = DateTime.Parse(httpResponse.end);
        loading = false;
    }
}